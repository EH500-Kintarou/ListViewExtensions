<Window x:Class="Sample.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
		xmlns:lv="http://schemas.eh500-kintarou.com/ListViewExtensions"
        xmlns:v="clr-namespace:Sample.Views"
        xmlns:vm="clr-namespace:Sample.ViewModels"
        Title="MainWindow" Height="480" Width="640">

	<Window.DataContext>
		<vm:MainWindowViewModel/>
	</Window.DataContext>

	<i:Interaction.Triggers>

		<!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
		<!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
		<!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

		<!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
		<i:EventTrigger EventName="ContentRendered">
			<l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
		</i:EventTrigger>

		<!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
		<i:EventTrigger EventName="Closed">
			<l:DataContextDisposeAction/>
		</i:EventTrigger>

		<!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

	</i:Interaction.Triggers>

	<DockPanel Margin="10">
        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" Margin="0,10,0,0">
			<Button Margin="0,0,10,0" Content="Add" Width="75" >
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Add" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Button>
			<Button Margin="0,0,10,0" Content="Remove" Width="75" Command="{Binding People.RemoveSelectedItemCommand}" />
			<Button Margin="0,0,10,0" Content="Clear All" Width="75" >
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="ClearAll" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Button>
			<Button Margin="0,0,10,0" Content="Up" Width="75" Command="{Binding People.MoveUpSelectedItemCommand}" />
			<Button Margin="0,0,10,0" Content="Down" Width="75" Command="{Binding People.MoveDownSelectedItemCommand}" />
			<Button Margin="0,0,10,0" Content="Toggle Selection" Width="110" Command="{Binding People.ToggleSelectionCommand}" />
		</StackPanel>

		<ListView ItemsSource="{Binding People}" >
			<ListView.View>
                <GridView>
                    <lv:SortableGridViewColumn Width="120" SortableSource="{Binding People}" DisplayMemberBinding="{Binding Name}" Header="Name" />
                    <lv:SortableGridViewColumn Width="150" SortableSource="{Binding People}" DisplayMemberBinding="{Binding Pronunciation}" Header="Pronunciation" />
                    <lv:SortableGridViewColumn Width="70"  SortableSource="{Binding People}" DisplayMemberBinding="{Binding Age}" Header="Age"  />
                    <lv:SortableGridViewColumn Width="120" SortableSource="{Binding People}" DisplayMemberBinding="{Binding Birthday}" Header="Birthday"  />
                    <lv:SortableGridViewColumn Width="120" SortableSource="{Binding People}" DisplayMemberBinding="{Binding Height}" Header="Height"  />                    
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="lv:SortableGridViewColumnHeader">
                            <Setter Property="SortingArrowLocation" Value="Top" />
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>
				</GridView>
			</ListView.View>
			<ListView.ItemContainerStyle>
				<Style TargetType="ListViewItem">
					<Setter Property="ContextMenu">
						<Setter.Value>
							<ContextMenu>
								<MenuItem Header="Increment the age" Command="{Binding IncrementAgeCommand}" />
								<MenuItem Header="Decrement the age" Command="{Binding DecrementAgeCommand}" />
							</ContextMenu>
						</Setter.Value>
					</Setter>
					<!--<Setter Property="lv:DoubleClickBehavior.Command" Value="{Binding DoubleClickCommand}" />-->
					<Setter Property="lv:DoubleClickBehavior.MethodTarget" Value="{Binding}" />
					<Setter Property="lv:DoubleClickBehavior.MethodName" Value="DoubleClicked" />
				</Style>
			</ListView.ItemContainerStyle>
			<i:Interaction.Triggers>
				<l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="SelectedItemsMirroring" >
					<lv:ListViewSelectedItemsAction Source="{Binding People.SelectedItemsSetter}" />
				</l:InteractionMessageTrigger>
			</i:Interaction.Triggers>
		</ListView>
	</DockPanel>
</Window>
